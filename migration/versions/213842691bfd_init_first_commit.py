"""init: first commit

Revision ID: 213842691bfd
Revises:
Create Date: 2025-03-01 18:38:33.685624

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "213842691bfd"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tokens",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("address", sa.String(length=128), nullable=False),
        sa.Column("decimals", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("address"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_tokens_id"), "tokens", ["id"], unique=False)
    op.create_table(
        "trading_settings",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("take_profit_percentage", sa.Float(), nullable=False),
        sa.Column("stop_loss_percentage", sa.Float(), nullable=False),
        sa.Column("short_ema_time_period", sa.Integer(), nullable=False),
        sa.Column("long_ema_time_period", sa.Integer(), nullable=False),
        sa.Column("rsi_buy_threshold", sa.Integer(), nullable=False),
        sa.Column("rsi_sell_threshold", sa.Integer(), nullable=False),
        sa.Column("rsi_time_period", sa.Integer(), nullable=False),
        sa.Column("buy_amount", sa.Float(), nullable=False),
        sa.Column("buy_max_orders_threshold", sa.Integer(), nullable=False),
        sa.Column("auto_buy_enabled", sa.Boolean(), nullable=False),
        sa.Column("auto_sell_enabled", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_trading_settings_id"),
        "trading_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "orders_buy",
        sa.Column("from_token_id", sa.Integer(), nullable=False),
        sa.Column("to_token_id", sa.Integer(), nullable=False),
        sa.Column("from_token_amount", sa.Integer(), nullable=False),
        sa.Column("to_token_amount", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["from_token_id"],
            ["tokens.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_token_id"],
            ["tokens.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_orders_buy_id"), "orders_buy", ["id"], unique=False
    )
    op.create_table(
        "prices",
        sa.Column("token_id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prices_id"), "prices", ["id"], unique=False)
    op.create_table(
        "trading_pair_settings",
        sa.Column("from_token_id", sa.Integer(), nullable=False),
        sa.Column("to_token_id", sa.Integer(), nullable=False),
        sa.Column("trading_setting_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["from_token_id"],
            ["tokens.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_token_id"],
            ["tokens.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_setting_id"],
            ["trading_settings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_trading_pair_settings_id"),
        "trading_pair_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "orders_sell",
        sa.Column("from_token_id", sa.Integer(), nullable=False),
        sa.Column("to_token_id", sa.Integer(), nullable=False),
        sa.Column("from_token_amount", sa.Integer(), nullable=False),
        sa.Column("to_token_amount", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("buy_order_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["buy_order_id"],
            ["orders_buy.id"],
        ),
        sa.ForeignKeyConstraint(
            ["from_token_id"],
            ["tokens.id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_token_id"],
            ["tokens.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_orders_sell_id"), "orders_sell", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_orders_sell_id"), table_name="orders_sell")
    op.drop_table("orders_sell")
    op.drop_index(
        op.f("ix_trading_pair_settings_id"), table_name="trading_pair_settings"
    )
    op.drop_table("trading_pair_settings")
    op.drop_index(op.f("ix_prices_id"), table_name="prices")
    op.drop_table("prices")
    op.drop_index(op.f("ix_orders_buy_id"), table_name="orders_buy")
    op.drop_table("orders_buy")
    op.drop_index(
        op.f("ix_trading_settings_id"), table_name="trading_settings"
    )
    op.drop_table("trading_settings")
    op.drop_index(op.f("ix_tokens_id"), table_name="tokens")
    op.drop_table("tokens")
    # ### end Alembic commands ###
